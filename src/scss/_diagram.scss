#component-diagram-svg {
  $bg-color: $black;
  $edge-color: $gray2;
  $dim-opacity: 10%;

  background-color: $gray1;

  .node {
    &.highlight {
      rect, circle, ellipse, path, polygon {
        stroke: $hotpink !important;
        stroke-width: 4px !important;
      }
    }

    &.dim {
      .label {
        fill: mix($white, $bg-color, $weight: $dim-opacity);
      }
    }
    &.package {
      fill: $teal;

      .label { fill: $black; }
      &.dim { fill: mix($teal, $bg-color, $weight: $dim-opacity); }
    }
    &.class {
      fill: $blue;

      &.dim { fill: mix($blue, $bg-color, $weight: $dim-opacity); }
    }
    &.database {
      fill: $royal;

      path { stroke: $black; }
      &.dim > .shape { fill: mix($royal, $bg-color, $weight: $dim-opacity); }
    }
    &.http {
      fill: $hotpink;

      &.dim { fill: mix($hotpink, $bg-color, $weight: $dim-opacity); }
    }
    &.io {
      fill: $col-int;

      &.dim { fill: mix($col-int, $bg-color, $weight: $dim-opacity); }
    }
    .label {
      fill: $white;
      font-family: 'IBM Plex Sans', sans-serif;
    }
  }

  .edgePath {
    &.highlight {
      path { stroke: $hotpink; }
      marker { fill: $hotpink; }
    }

    &.dim {
      marker { fill: mix($edge-color, $bg-color, $weight: $dim-opacity); }
      path { stroke: mix($edge-color, $bg-color, $weight: $dim-opacity); }
    }

    path {
      stroke: $edge-color;
      stroke-width: 2px;
    }

    marker {
      fill: $edge-color;
    }
  }

  .nodeLabels {
    pointer-events: none;
    fill: $white;

    .dim {
      opacity: $dim-opacity;
    }

    .package {
      fill: $black;
      &.dim { opacity: 1 }
    }
  }
}